{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "prefix": {
            "type": "string",
            "metadata": {
                "description": "Prefix to be applied to the name and hostname of the Chef and Automate servers"
            }
        },

        "customerResourceGroupName": {
            "type": "string",
            "metadata": {
                "description": "Name of the resource group that contains the Virtual network to which the Chef and Automate servers should be connected to"
            }
        },

        "virtualNetworkName": {
            "type": "string",
            "metadata": {
                "description": "Name of the Virtual Network which contains the Subnet to which the machines should be connected"
            }
        },

        "subnetName": {
            "type": "string",
            "metadata": {
                "description": "Name of the subnet to which the machines should be connected to"
            }
        },

        "uniqueShort": {
            "type": "string",
            "metadata": {
                "description": "A string of 4 or 5 characters that will be used to help uniquely identify the resources that are created. If this is not specified then a value will be automatically created."
            },
            "defaultValue": ""
        },

        "sshSourceAddresses": {
            "type": "array",
            "metadata": {
                "description": "Source ranges from which SSH access is permitted."
            },
            "defaultValue": []
        },

        "chefServerVersion": {
            "type": "string",
            "metadata": {
                "description": "Version of the Chef Server to download and install"
            }
        },

        "chefUsername": {
            "type": "string",
            "metadata": {
                "description": "Username when creating the Chef user"
            }
        },

        "chefUserFullname": {
            "type": "string",
            "metadata": {
                "description": "Ful name of the Chef user"
            }
        },

        "chefUserPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Password to be associated with the Chef user"
            }
        },

        "chefUserEmailaddress": {
            "type": "string",
            "metadata": {
                "description": "Email address associated with the chef user"
            }
        },

        "chefOrg": {
            "type": "string",
            "metadata": {
                "description": "Org that should be created and the user associated with"
            }
        },

        "chefOrgDescription": {
            "type": "string",
            "metadata": {
                "description": "Description of the Chef org"
            }
        }
    },
    "variables": {
        "unique": "[uniqueString(subscription().subscriptionId, resourceGroup().id, deployment().name, parameters('prefix'))]",
        "uniqueShort": "[if(empty(parameters('uniqueShort')), substring(variables('unique'), 0, 4), parameters('uniqueShort'))]",

        "baseUrl": "https://raw.githubusercontent.com/chef-partners/azure-managed-automate/master",

        "location": "[resourceGroup().location]",

        "name": {
            "storageAccount": "[variables('unique')]",
            "virtualNetwork": "[concat(parameters('prefix'), '-', variables('uniqueShort'), '-VNet')]",
            "vm": {
                "chef": "[concat(parameters('prefix'), '-chef-', variables('uniqueShort'), '-VM')]",
                "automate": "[concat(parameters('prefix'), '-automate-', variables('uniqueShort'), '-VM')]"
            },
            "computer": {
                "chef": "[concat(parameters('prefix'), '-chef-', variables('uniqueShort'))]",
                "automate": "[concat(parameters('prefix'), '-automate-', variables('uniqueShort'))]"
            },
            "publicIPAddress": {
                "chef": "[concat(parameters('prefix'), '-chef-', variables('uniqueShort'), '-PublicIP')]",
                "automate": "[concat(parameters('prefix'), '-automate-', variables('uniqueShort'), '-PublicIP')]"
            },
            "nic": {
                "ama": {
                    "chef": "[concat(parameters('prefix'), '-chef-', variables('uniqueShort'), '-AMA-NIC')]",
                    "automate": "[concat(parameters('prefix'), '-automate-', variables('uniqueShort'), '-AMA-NIC')]"
                },
                "customer": {
                    "chef": "[concat(parameters('prefix'), '-chef-', variables('uniqueShort'), '-Customer-VNet-NIC')]",
                    "automate": "[concat(parameters('prefix'), '-automate-', variables('uniqueShort'), '-Customer-VNet-NIC')]"
                }
            },
            "nsg": {
                "chef": "[concat(parameters('prefix'), '-chef-', variables('uniqueShort'), '-Customer-NSG')]",
                "automate": "[concat(parameters('prefix'), '-automate-', variables('uniqueShort'), '-Customer-NSG')]"
            },
            "resourceGroup": "[parameters('customerResourceGroupName')]",
            "extension": {
                "chef": "[concat(parameters('prefix'), '-chef-', variables('uniqueShort'), '-ScriptExtension')]"
            }
        },

        "vmSize": {
            "chef": "Standard_DS2_V2",
            "automate": "Standard_DS2_V2"
        },

        "admin": {
            "username": "azureama",
            "sshPublicKey": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDU56RXZd2AbthjPXKc6dWs9kBxBeUQjQsiJHu5rHaAqKBWvS3XtgYDnWg8p0U2wvkQGGHpowPaP0AGhyRgE2xvsglaT0OnV1vF7zt/24zhoYkfbWtRuEsQCI9ZKs/q2Fg8Wf6q//eRaAi7iH4/MPMuYr+pBVVZp+bcYhne8CJOi4w0VIcSIk462WyqOEKZJk+f7gdkqxk+2yzo3Rqh25+C5j4NuXPmw8H4ccjPeL2E5snfLSZHIe/iCwXnVEdmpsqvaMuVs/LuQ/mJ0Rv8rjwtd8HKPlZJN/M4bt4U8CB8a0dsn+skZXsu7CUHEVwrol/jNzF1hTOA6Fy1jJFvy2yP"
        },

        "customerVNetID": "[resourceId(parameters('customerResourceGroupName'), 'Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
        "customerSubnetRef": "[concat(variables('customerVNetID'), '/subnets/', parameters('subnetName'))]",

        "sourceAddresses": {
            "ssh": "[parameters('sshSourceAddresses')]"
        },

        "urls": {
            "storageAccount": "[concat(variables('baseUrl'), '/src/templates/storage-account.json')]",
            "virtualNetwork": "[concat(variables('baseUrl'), '/src/templates/virtual-network.json')]",
            "publicIPAddress": "[concat(variables('baseUrl'), '/src/templates/public-ipaddress.json')]",
            "networkInterfacePrivate": "[concat(variables('baseUrl'), '/src/templates/network-interface-private.json')]",
            "networkInterfacePublic": "[concat(variables('baseUrl'), '/src/templates/network-interface-public.json')]",
            "networkSecurityGroup": "[concat(variables('baseUrl'), '/src/templates/network-security-group.json')]",
            "virtualMachine": "[concat(variables('baseUrl'), '/src/templates/virtual-machine.json')]",
            "scriptExtension": "[concat(variables('baseUrl'), '/src/templates/script-extension.json')]",
            "scripts": {
                "chefserver": "[concat(variables('baseUrl'), '/src/scripts/chef-server.sh')]"
            }
        },

        "apiVersions": {
            "deployments": "2017-05-10"
        },

        "chef": {
            "version": "[parameters('chefServerVersion')]",
            "username": "[parameters('chefUsername')]",
            "email": "[parameters('chefUserEmailaddress')]",
            "fullname": "[parameters('chefUserFullname')]",
            "password": "[parameters('chefUserPassword')]",
            "org": "[toLower(parameters('chefOrg'))]",
            "orgDescription": "[parameters('chefOrgDescription')]"
        }
    },
    "resources": [

        {
            "type": "Microsoft.Resources/deployments",
            "name": "[concat(variables('name').storageAccount, '-Deployment')]",
            "apiVersion": "[variables('apiVersions').deployments]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('urls').storageAccount]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "storageAccountName": {
                        "value": "[variables('name').storageAccount]"
                    }
                }
            }
        },

        {
            "type": "Microsoft.Resources/deployments",
            "name": "[concat(variables('name').nsg.chef, '-Deployment')]",
            "apiVersion": "[variables('apiVersions').deployments]",
            "properties": {
                "mode":"Incremental",
                "templateLink": {
                    "uri": "[variables('urls').networkSecurityGroup]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "groupName": {
                        "value": "[variables('name').nsg.chef]"
                    },
                    "sshSourceAddresses": {
                        "value": "[variables('sourceAddresses').ssh]"
                    }
                }
            }
        },

        {
            "type": "Microsoft.Resources/deployments",
            "name": "[concat(variables('name').nsg.automate, '-Deployment')]",
            "apiVersion": "[variables('apiVersions').deployments]",
            "properties": {
                "mode":"Incremental",
                "templateLink": {
                    "uri": "[variables('urls').networkSecurityGroup]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "groupName": {
                        "value": "[variables('name').nsg.automate]"
                    },
                    "sshSourceAddresses": {
                        "value": "[variables('sourceAddresses').ssh]"
                    }
                }
            }
        },

        {
            "type": "Microsoft.Resources/deployments",
            "name": "[concat(variables('name').publicIPAddress.chef, '-Deployment')]",
            "apiVersion": "[variables('apiVersions').deployments]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('urls').publicIPAddress]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "publicIPAddressName": {
                        "value": "[variables('name').publicIPAddress.chef]"
                    },
                    "publicIPAddressType": {
                        "value": "Dynamic"
                    },
                    "dnsLabelPrefix": {
                        "value": "[variables('name').computer.chef]"
                    }
                }
            }
        },

        {
            "type": "Microsoft.Resources/deployments",
            "name": "[concat(variables('name').publicIPAddress.automate, '-Deployment')]",
            "apiVersion": "[variables('apiVersions').deployments]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('urls').publicIPAddress]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "publicIPAddressName": {
                        "value": "[variables('name').publicIPAddress.automate]"
                    },
                    "publicIPAddressType": {
                        "value": "Dynamic"
                    },
                    "dnsLabelPrefix": {
                        "value": "[variables('name').computer.automate]"
                    }
                }
            }
        },
        
        {
            "type": "Microsoft.Resources/deployments",
            "name": "[concat(variables('name').nic.customer.chef, '-Deployment')]",
            "apiVersion": "[variables('apiVersions').deployments]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', variables('name').publicIPAddress.chef, '-Deployment')]",
                "[concat('Microsoft.Resources/deployments/', variables('name').nsg.chef, '-Deployment')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('urls').networkInterfacePublic]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "nicName": {
                        "value": "[variables('name').nic.customer.chef]"
                    },
                    "publicIPAddressRef": {
                        "value": "[reference(concat(variables('name').publicIPAddress.chef, '-Deployment')).outputs.publicIpId.value]"
                    },
                    "subnetRef": {
                        "value": "[variables('customerSubnetRef')]"
                    },
                    "nsgRef": {
                        "value": "[reference(concat(variables('name').nsg.chef, '-Deployment')).outputs.nsgId.value]"
                    }
                }
            }
        },
        
        {
            "type": "Microsoft.Resources/deployments",
            "name": "[concat(variables('name').nic.customer.automate, '-Deployment')]",
            "apiVersion": "[variables('apiVersions').deployments]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', variables('name').publicIPAddress.automate, '-Deployment')]",
                "[concat('Microsoft.Resources/deployments/', variables('name').nsg.automate, '-Deployment')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('urls').networkInterfacePublic]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "nicName": {
                        "value": "[variables('name').nic.customer.automate]"
                    },
                    "publicIPAddressRef": {
                        "value": "[reference(concat(variables('name').publicIPAddress.automate, '-Deployment')).outputs.publicIpId.value]"
                    },
                    "subnetRef": {
                        "value": "[variables('customerSubnetRef')]"
                    },
                    "nsgRef": {
                        "value": "[reference(concat(variables('name').nsg.automate, '-Deployment')).outputs.nsgId.value]"
                    }
                }
            }
        },

        {
            "type": "Microsoft.Resources/deployments",
            "name": "[concat(variables('name').vm.chef, '-Deployment')]",
            "apiVersion": "[variables('apiVersions').deployments]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', variables('name').nic.customer.chef, '-Deployment')]",
                "[concat('Microsoft.Resources/deployments/', variables('name').storageAccount, '-Deployment')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('urls').virtualMachine]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "vmName": {
                        "value": "[variables('name').vm.chef]"
                    },
                    "computerName": {
                        "value": "[variables('name').computer.chef]"
                    },
                    "vmSize": {
                        "value": "[variables('vmSize').chef]"
                    },
                    "adminUsername": {
                        "value": "[variables('admin').username]"
                    },
                    "sshPublicKey": {
                        "value": "[variables('admin').sshPublicKey]"
                    },
                    "authenticationType": {
                        "value": "sshPublicKey"
                    },
                    "storageAccountName": {
                        "value": "[variables('name').storageAccount]"
                    },
                    "customerNicRef": {
                        "value": "[reference(concat(variables('name').nic.customer.chef, '-Deployment')).outputs.ref.value]"
                    },
                    "fqdn": {
                        "value": "[reference(concat(variables('name').publicIPAddress.chef, '-Deployment')).outputs.fqdn.value]"
                    }
                }
            }
        },

        {
            "type": "Microsoft.Resources/deployments",
            "name": "[concat(variables('name').vm.automate, '-Deployment')]",
            "apiVersion": "[variables('apiVersions').deployments]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', variables('name').nic.customer.automate, '-Deployment')]",
                "[concat('Microsoft.Resources/deployments/', variables('name').storageAccount, '-Deployment')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('urls').virtualMachine]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "vmName": {
                        "value": "[variables('name').vm.automate]"
                    },
                    "computerName": {
                        "value": "[variables('name').computer.automate]"
                    },
                    "vmSize": {
                        "value": "[variables('vmSize').automate]"
                    },
                    "adminUsername": {
                        "value": "[variables('admin').username]"
                    },
                    "sshPublicKey": {
                        "value": "[variables('admin').sshPublicKey]"
                    },
                    "authenticationType": {
                        "value": "sshPublicKey"
                    },
                    "storageAccountName": {
                        "value": "[variables('name').storageAccount]"
                    },
                    "customerNicRef": {
                        "value": "[reference(concat(variables('name').nic.customer.automate, '-Deployment')).outputs.ref.value]"
                    },
                    "fqdn": {
                        "value": "[reference(concat(variables('name').publicIPAddress.automate, '-Deployment')).outputs.fqdn.value]"
                    }
                }
            }
        },
        
        {
            "type": "Microsoft.Resources/deployments",
            "name": "[concat(variables('name').extension.chef, '-Deployment')]",
            "apiVersion": "[variables('apiVersions').deployments]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', variables('name').vm.chef, '-Deployment')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('urls').scriptExtension]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "vmname": {
                        "value": "[variables('name').vm.chef]"
                    },
                    "scriptUrl": {
                        "value": "[variables('urls').scripts.chefserver]"
                    },
                    "scriptArguments": {
                        "value": "[concat('-v ', variables('chef').version, ' -u ', variables('chef').username, ' -f \"', variables('chef').fullname. '\" -p \"', variables('chef').password, '\" -a ', variables('chef').email, ' -o ', variable('chef').org, ' -d \"', variables('chef').orgDescription, '\"]'"
                    }
                }
            }
        }
    ],
    "outputs": {
        
    }
}